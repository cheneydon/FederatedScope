use_gpu: True
device: 1
seed: 12345
outdir: exp/pretrain/pfednlp/v5/
federate:
  mode: standalone
  method: pfednlp
  local_update_steps: 1
  batch_or_epoch: epoch
  total_round_num: 50
  client_num: 18
  num_grouped_clients: [1, 3, 3, 2, 5, 4]
  save_to: ckpt/
data:
  type: pfednlp_data
  task: pretrain
  root: /mnt/dongchenhe.dch/datasets/fednlp/v5/
  max_pretrain_seq_len: 384
  max_pretrain_tgt_len: 128
  batch_size: 8
  pretrain_tasks: ['mlm', 'denoise']
  downstream_tasks: ['imdb', 'agnews', 'squad', 'newsqa', 'cnndm', 'msqg']
  num_workers: 0
  cache_dir: cache/v5/
aggregator:
  num_agg_groups: 1
  inside_weight: 1.0
  outside_weight: 0.0
optimizer:
  mlm:
    type: AdamW
    lr_enc: 3e-5
    lr_dec: 3e-2
    weight_decay: 0.01
    grad_clip: 1.0
  denoise:
    type: AdamW
    lr_enc: 0.002
    lr_dec: 0.2
    weight_decay: 0.0
    grad_clip: 0.0
scheduler:
  mlm:
    type: step
    warmup_ratio_enc: 0.1
    warmup_ratio_dec: 0.05
  denoise:
    type: noam
    warmup_ratio_enc: 0.4
    warmup_ratio_dec: 0.2
model:
  type: pfednlp_model
  bert_type: google/bert_uncased_L-2_H-128_A-2
  num_dec_layers: 1
personalization:
  local_param: ['classifier', 'decoder', 'generator']
trainer:
  type: pfednlp_trainer
  train_steps: 50 #20
  grad_accum_count: 8
  disp_freq: 50
  val_freq: 100000000  # eval freq across batches
eval:
  metrics: ['acc']
  split: ['test']
  report: ['raw']
  freq: 100000000  # eval freq across rounds
test:
  temp_dir: temp
